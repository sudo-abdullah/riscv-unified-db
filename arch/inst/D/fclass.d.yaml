# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: inst_schema.json#
kind: instruction
name: fclass.d
long_name: Double-precision floating-point classify
description: |
  This is defined analogously to its single-precision counterpart, 
  but operates on double-precision operands. This instruction examines 
  the value in floating-point register `rs1` and writes to integer
  register `rd` a 10-bit mask that indicates the class of the floating-point 
  number. The corresponding bit in `rd` will be set if the property is true 
  and clear otherwise. All other bits in `rd` are cleared. Note that exactly 
  one bit in `rd` will be set.

  The format of the mask is described in the table below.
  .Format of result of `fclass` instruction.
  [%autowidth,float="center",align="center",cols="^,<",options="header",]
  |===
  |_rd_ bit |Meaning
  |0 |_rs1_ is latexmath:[$-\infty$].
  |1 |_rs1_ is a negative normal number.
  |2 |_rs1_ is a negative subnormal number.
  |3 |_rs1_ is latexmath:[$-0$].
  |4 |_rs1_ is latexmath:[$+0$].
  |5 |_rs1_ is a positive subnormal number.
  |6 |_rs1_ is a positive normal number.
  |7 |_rs1_ is latexmath:[$+\infty$].
  |8 |_rs1_ is a signaling NaN.
  |9 |_rs1_ is a quiet NaN.
  |===
definedBy: D
assembly: xd, xs1
encoding:
  match: 111000100000-----001-----1010011
  variables:
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
operation(): |
